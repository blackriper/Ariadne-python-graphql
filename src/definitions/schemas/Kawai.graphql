type Query{
    Animes:[Anime!]!
    getAnime(id:ID!):Anime!
    Mangas:[Manga!]!
    getManga(id:ID!):Manga!
    Favorites(classi:Classification):[Favorite!]!
}



type Mutation {
   newAnime(anime: NewAnimeInput!):String!
   newManga(manga:NewMangaInput!):String!
   addFavorite(id:ID!,classi:Classification):String!
   deleteFavorite(id:ID!,classi:Classification):String!
    
}

#enum de datos
enum Classification{
    ANIME
    MANGA
}

#input para mutaciones
input NewAnimeInput{
    title:String!
    cover:String!
    description:String!
    genre:[String!]!
    rank:String!
    favorite:Boolean
}

input NewMangaInput{
    title:String!
    cover:String!
    description:String!
    genre:[String!]!
    rank:String!
    favorite:Boolean
}


#tipos de datos
type Anime{
    _id:ID
    title:String!
    cover:String!
    description:String!
    genre:[String!]!
    rank:String!
    favorite:Boolean!
}

type Manga{
   _id:ID
    title:String!
    cover:String!
    description:String!
    genre:[String!]!
    rank:String!
    favorite:Boolean!  
}

type Favorite{
   _id:ID
    title:String!
    cover:String!
    description:String!
    genre:[String!]!
    rank:String!
    favorite:Boolean!  
}